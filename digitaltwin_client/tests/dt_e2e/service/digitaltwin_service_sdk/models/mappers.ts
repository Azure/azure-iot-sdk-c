/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";


export const DesiredState: msRest.CompositeMapper = {
  serializedName: "DesiredState",
  type: {
    name: "Composite",
    className: "DesiredState",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      subCode: {
        serializedName: "subCode",
        type: {
          name: "Number"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "Number"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Reported: msRest.CompositeMapper = {
  serializedName: "Reported",
  type: {
    name: "Composite",
    className: "Reported",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Object"
        }
      },
      desiredState: {
        serializedName: "desiredState",
        type: {
          name: "Composite",
          className: "DesiredState"
        }
      }
    }
  }
};

export const Desired: msRest.CompositeMapper = {
  serializedName: "Desired",
  type: {
    name: "Composite",
    className: "Desired",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const Property: msRest.CompositeMapper = {
  serializedName: "Property",
  type: {
    name: "Composite",
    className: "Property",
    modelProperties: {
      reported: {
        serializedName: "reported",
        type: {
          name: "Composite",
          className: "Reported"
        }
      },
      desired: {
        serializedName: "desired",
        type: {
          name: "Composite",
          className: "Desired"
        }
      }
    }
  }
};

export const InterfaceModel: msRest.CompositeMapper = {
  serializedName: "Interface",
  type: {
    name: "Composite",
    className: "InterfaceModel",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className: "Property"
            }
          }
        }
      }
    }
  }
};

export const DigitalTwinInterfaces: msRest.CompositeMapper = {
  serializedName: "DigitalTwinInterfaces",
  type: {
    name: "Composite",
    className: "DigitalTwinInterfaces",
    modelProperties: {
      interfaces: {
        serializedName: "interfaces",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className: "InterfaceModel"
            }
          }
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const DigitalTwinInterfacesPatchInterfacesValuePropertiesValueDesired: msRest.CompositeMapper = {
  serializedName: "DigitalTwinInterfacesPatch_interfacesValue_propertiesValue_desired",
  type: {
    name: "Composite",
    className: "DigitalTwinInterfacesPatchInterfacesValuePropertiesValueDesired",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const DigitalTwinInterfacesPatchInterfacesValuePropertiesValue: msRest.CompositeMapper = {
  serializedName: "DigitalTwinInterfacesPatch_interfacesValue_propertiesValue",
  type: {
    name: "Composite",
    className: "DigitalTwinInterfacesPatchInterfacesValuePropertiesValue",
    modelProperties: {
      desired: {
        serializedName: "desired",
        type: {
          name: "Composite",
          className: "DigitalTwinInterfacesPatchInterfacesValuePropertiesValueDesired"
        }
      }
    }
  }
};

export const DigitalTwinInterfacesPatchInterfacesValue: msRest.CompositeMapper = {
  serializedName: "DigitalTwinInterfacesPatch_interfacesValue",
  type: {
    name: "Composite",
    className: "DigitalTwinInterfacesPatchInterfacesValue",
    modelProperties: {
      properties: {
        serializedName: "properties",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className: "DigitalTwinInterfacesPatchInterfacesValuePropertiesValue"
            }
          }
        }
      }
    }
  }
};

export const DigitalTwinInterfacesPatch: msRest.CompositeMapper = {
  serializedName: "DigitalTwinInterfacesPatch",
  type: {
    name: "Composite",
    className: "DigitalTwinInterfacesPatch",
    modelProperties: {
      interfaces: {
        serializedName: "interfaces",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className: "DigitalTwinInterfacesPatchInterfacesValue"
            }
          }
        }
      }
    }
  }
};

export const DigitalTwinGetAllInterfacesHeaders: msRest.CompositeMapper = {
  serializedName: "digitaltwin-getallinterfaces-headers",
  type: {
    name: "Composite",
    className: "DigitalTwinGetAllInterfacesHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DigitalTwinUpdateMultipleInterfacesHeaders: msRest.CompositeMapper = {
  serializedName: "digitaltwin-updatemultipleinterfaces-headers",
  type: {
    name: "Composite",
    className: "DigitalTwinUpdateMultipleInterfacesHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DigitalTwinGetSingleInterfaceHeaders: msRest.CompositeMapper = {
  serializedName: "digitaltwin-getsingleinterface-headers",
  type: {
    name: "Composite",
    className: "DigitalTwinGetSingleInterfaceHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DigitalTwinInvokeInterfaceCommandHeaders: msRest.CompositeMapper = {
  serializedName: "digitaltwin-invokeinterfacecommand-headers",
  type: {
    name: "Composite",
    className: "DigitalTwinInvokeInterfaceCommandHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      },
      xMsCommandStatuscode: {
        serializedName: "x-ms-command-statuscode",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const DigitalTwinGetDigitalTwinModelHeaders: msRest.CompositeMapper = {
  serializedName: "digitaltwin-getdigitaltwinmodel-headers",
  type: {
    name: "Composite",
    className: "DigitalTwinGetDigitalTwinModelHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      },
      xMsModelId: {
        serializedName: "x-ms-model-id",
        type: {
          name: "String"
        }
      }
    }
  }
};
