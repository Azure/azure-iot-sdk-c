name: $(BuildID)_$(BuildDefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)

jobs:
- job: Pull_Sync_SDK
  pool:
      name: $(MXCHIPAGENTPOOL)
  steps:
  - script: |
      . build_all/arduino/setup_arduino_libraries.sh
    displayName: 'setup libraries'
    env:
      IOTHUB_CONNECTION_DEVICE_STRING: $(MXCHIP_NIGHTLY_DEVICE_STRING)
      WIFI_SSID: $(WIFI_SSID)
      WIFI_PWD:  $(WIFI_PWD)
      ARDUINO_LIBRARY_DIR: $(Agent.WorkFolder)/libraries/
      NEWTIN: $(NEWTIN)
      
- job: Build_Upload_ESP8266
  dependsOn: Pull_Sync_SDK
  pool:
    name: $(MXCHIPAGENTPOOL)
  steps:
  - script: |
      ls
      cd $(Agent.WorkFolder)/libraries/AzureIoTHub/examples/iothub_ll_telemetry_sample/
      arduino --upload --board esp8266:esp8266:huzzah --port $(ESP8266_PORT) --pref sketchbook.path=$ARDUINO_LIBRARY_DIR --verbose-build telemetry_sample.c.ino 
      # should fail job if build/upload fails
    env:
      ARDUNIO_LIBRARY_DIR: $(Agent.WorkFolder)

- job: test_ESP8266
  dependsOn: Build_Upload_ESP8266
  condition: succeeded()
  pool:
    name: $(MXCHIPAGENTPOOL)
  steps:
  - script: |
      ls
      cd $(Build.SourcesDirectory)/testtools/UART_interface/
      echo -e "\r\n\r\n\r\n" | cat > input.txt
      python3 serial_connect.py -i input.txt -o output.txt -b 115200 -p $(ESP8266_PORT) -d esp8266
      rm input.txt
    displayName: 'run_test'

  - script: |
      # Check that this is the right source directory
      ls
      cp $(Build.SourcesDirectory)/testtools/UART_interface/output.txt $(Build.ArtifactStagingDirectory)
    displayName: "Copy Files into Artifact repo"

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifacts: log'
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: 'log'
      publishLocation: 'Container'
    condition: succeeded()

- job: Build_Upload_ESP32
  dependsOn: Pull_Sync_SDK
  pool:
    name: $(MXCHIPAGENTPOOL)
  steps:
  - script: |
      ls
      cd $(Agent.WorkFolder)/libraries/AzureIoTHub/examples/iothub_ll_telemetry_sample/
      arduino --upload --board esp32:esp32:huzzah --port $(ESP32_PORT) --pref sketchbook.path=$ARDUINO_LIBRARY_DIR --verbose-build telemetry_sample.c.ino 
      # should fail job if build/upload fails
    env:
      ARDUNIO_LIBRARY_DIR: $(Agent.WorkFolder)

- job: test_ESP32
  dependsOn: Build_Upload_ESP32
  condition: succeeded()
  pool:
    name: $(MXCHIPAGENTPOOL)
  steps:
  - script: |
      ls
      cd $(Build.SourcesDirectory)/testtools/UART_interface/
      echo -e "\r\n\r\n\r\n" | cat > input.txt
      python3 serial_connect.py -i input.txt -o output.txt -b 1000000 -p $(ESP32_PORT) -d esp32
      rm input.txt
    displayName: 'run_test'

  - script: |
      # Check that this is the right source directory
      ls
      cp $(Build.SourcesDirectory)/testtools/UART_interface/output.txt $(Build.ArtifactStagingDirectory)
    displayName: "Copy Files into Artifact repo"

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifacts: log'
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: 'log'
      publishLocation: 'Container'
    condition: succeeded()
