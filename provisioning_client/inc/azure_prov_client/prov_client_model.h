// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE file in the project root for full license information.

#ifndef PROV_CLIENT_MODEL_H
#define PROV_CLIENT_MODEL_H

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

/** @file prov_client_model.h
*    @brief APIs for defining Azure IoT Plug and Play models when using the provisioning client (DPS).
*
*/

#include "umock_c/umock_c_prod.h"
#include "azure_macro_utils/macro_utils.h"
#include "prov_device_ll_client.h"    

/**
* @brief    Creates a payload that defines the Azure IoT Plug and Play Model Id the device will be registering with.
*
* @param    modelId     Model Id of the device that is going to be registered.
* @param    payload     Payload generated by @c Prov_Client_Create_ModelPayload.  This should be sent to
*                       @c Prov_Device_LL_Set_Provisioning_Payload or @c Prov_Client_Free_ModelPayload.
*                       The application should free the data when done using @c Prov_Client_Free_ModelIdPayload.
*
* @remarks Only valid with MQTT and MQTT_WS protocols.
*
* @return PROV_DEVICE_RESULT_OK upon success or an error code upon failure.
*/
PROV_DEVICE_RESULT Prov_Client_Create_ModelIdPayload(const char* modelId, char** payload);


/**
* @brief    Creates a payload that defines the Azure IoT Plug and Play Model Id the device will be registering with.
*
* @param    payload     Payload generated by @c Prov_Client_Create_ModelIdPayload to be freed.
*/
void Prov_Client_Free_ModelIdPayload(char* payload);

#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif // PROV_CLIENT_MODEL_H
